{
  "permissions": {
    "allow": [
      "Bash(./jlink-runtime/bin/java -jar target/*.jar)",
      "Bash(cat:*)",
      "Bash(curl -X GET http://localhost:*)",
      "Bash(curl -X POST http://localhost:*)",
      "Bash(curl 127.0.0.1:*)",
      "Bash(curl http://127.0.0.1:*)",
      "Bash(curl http://localhost:*)",
      "Bash(curl localhost:*)",
      "Bash(docker build:*)",
      "Bash(docker exec * *)",
      "Bash(docker exec:*)",
      "Bash(docker logs *)",
      "Bash(docker logs:*)",
      "Bash(docker ps)",
      "Bash(docker ps:*)",
      "Bash(docker run:*)",
      "Bash(docker-compose down *)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose logs *)",
      "Bash(docker-compose logs:*)",
      "Bash(docker-compose ps)",
      "Bash(docker-compose restart *)",
      "Bash(docker-compose up *)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(docker:*)",
      "Bash(find:*)",
      "Bash(git add *)",
      "Bash(git add:*)",
      "Bash(git branch)",
      "Bash(git branch:*)",
      "Bash(git checkout *)",
      "Bash(git checkout:*)",
      "Bash(git commit *)",
      "Bash(git commit:*)",
      "Bash(git diff)",
      "Bash(git diff:*)",
      "Bash(git log *)",
      "Bash(git log:*)",
      "Bash(git status)",
      "Bash(git status:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(java -jar target/*.jar)",
      "Bash(java:*)",
      "Bash(javac:*)",
      "Bash(jdeps --multi-release 21 --ignore-missing-deps --list-deps target/*.jar)",
      "Bash(jlink --compress=2 --strip-debug --no-header-files --no-man-pages --add-modules * --output jlink-runtime)",
      "Bash(jmeter:*)",
      "Bash(jq:*)",
      "Bash(less:*)",
      "Bash(lsof:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mvn clean compile)",
      "Bash(mvn clean package)",
      "Bash(mvn clean package -Pdev)",
      "Bash(mvn clean:*)",
      "Bash(mvn compile exec:java -Dexec.mainClass=*)",
      "Bash(mvn compile exec:java -Pdev -Dexec.mainClass=*)",
      "Bash(mvn compile:*)",
      "Bash(mvn liquibase:*)",
      "Bash(mvn liquibase:update)",
      "Bash(mvn package:*)",
      "Bash(mvn test)",
      "Bash(mvn test:*)",
      "Bash(mvn:*)",
      "Bash(netstat:*)",
      "Bash(npm install)",
      "Bash(npm run build)",
      "Bash(npm start)",
      "Bash(npm test)",
      "Bash(nvidia-ctk --version)",
      "Bash(nvidia-smi)",
      "Bash(nvidia-smi:*)",
      "Bash(openssl req:*)",
      "Bash(pg_isready -U postgres)",
      "Bash(ping:*)",
      "Bash(ps:*)",
      "Bash(psql -U postgres -d postgres -c *)",
      "Bash(psql:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(tail:*)",
      "Bash(touch:*)",
      "Bash(tree:*)",
      "WebFetch(domain:docker.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.oracle.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:hub.docker.com)",
      "WebFetch(domain:huggingface.co)",
      "WebFetch(domain:liquibase.org)",
      "WebFetch(domain:llama-cpp-python.readthedocs.io)",
      "WebFetch(domain:maven.apache.org)",
      "WebFetch(domain:postgresql.org)",
      "WebFetch(domain:semver.org)",
      "WebFetch(domain:spring.io)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:www.conventionalcommits.org)"
    ],
    "deny": [
      "Bash(curl * | sh)",
      "Bash(curl:*)",
      "Bash(docker system prune -a -f)",
      "Bash(git push origin --delete *)",
      "Bash(git push:*)",
      "Bash(git reset --hard HEAD~*)",
      "Bash(mvn clean deploy)",
      "Bash(rm -rf / *)",
      "Bash(rm -rf:*)",
      "Bash(rm -rf ~/*)",
      "Bash(sudo *)",
      "Bash(wget * | sh)",
      "Bash(wget:*)"
    ]
  },
  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1"
  },
  "includeCoAuthoredBy": false
}