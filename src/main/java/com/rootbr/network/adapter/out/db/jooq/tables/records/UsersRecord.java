/*
 * This file is generated by jOOQ.
 */
package com.rootbr.network.adapter.out.db.jooq.tables.records;


import com.rootbr.network.adapter.out.db.jooq.tables.Users;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record7<String, String, String, LocalDate, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.users.first_name</code>.
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.last_name</code>.
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.birth_date</code>.
     */
    public void setBirthDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users.birth_date</code>.
     */
    public LocalDate getBirthDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.users.biography</code>.
     */
    public void setBiography(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users.biography</code>.
     */
    public String getBiography() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.city</code>.
     */
    public void setCity(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.users.city</code>.
     */
    public String getCity() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.encoded_password</code>.
     */
    public void setEncodedPassword(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.users.encoded_password</code>.
     */
    public String getEncodedPassword() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, LocalDate, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, LocalDate, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.LAST_NAME;
    }

    @Override
    public Field<LocalDate> field4() {
        return Users.USERS.BIRTH_DATE;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.BIOGRAPHY;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.CITY;
    }

    @Override
    public Field<String> field7() {
        return Users.USERS.ENCODED_PASSWORD;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public LocalDate component4() {
        return getBirthDate();
    }

    @Override
    public String component5() {
        return getBiography();
    }

    @Override
    public String component6() {
        return getCity();
    }

    @Override
    public String component7() {
        return getEncodedPassword();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public LocalDate value4() {
        return getBirthDate();
    }

    @Override
    public String value5() {
        return getBiography();
    }

    @Override
    public String value6() {
        return getCity();
    }

    @Override
    public String value7() {
        return getEncodedPassword();
    }

    @Override
    public UsersRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UsersRecord value4(LocalDate value) {
        setBirthDate(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setBiography(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setCity(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setEncodedPassword(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, String value2, String value3, LocalDate value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String id, String firstName, String lastName, LocalDate birthDate, String biography, String city, String encodedPassword) {
        super(Users.USERS);

        setId(id);
        setFirstName(firstName);
        setLastName(lastName);
        setBirthDate(birthDate);
        setBiography(biography);
        setCity(city);
        setEncodedPassword(encodedPassword);
        resetChangedOnNotNull();
    }
}
