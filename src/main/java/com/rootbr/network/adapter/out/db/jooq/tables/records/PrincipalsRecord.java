/*
 * This file is generated by jOOQ.
 */
package com.rootbr.network.adapter.out.db.jooq.tables.records;


import com.rootbr.network.adapter.out.db.jooq.tables.Principals;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PrincipalsRecord extends UpdatableRecordImpl<PrincipalsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>principals.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>principals.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>principals.encoded_password</code>.
     */
    public void setEncodedPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>principals.encoded_password</code>.
     */
    public String getEncodedPassword() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PrincipalsRecord
     */
    public PrincipalsRecord() {
        super(Principals.PRINCIPALS);
    }

    /**
     * Create a detached, initialised PrincipalsRecord
     */
    public PrincipalsRecord(String id, String encodedPassword) {
        super(Principals.PRINCIPALS);

        setId(id);
        setEncodedPassword(encodedPassword);
        resetTouchedOnNotNull();
    }
}
